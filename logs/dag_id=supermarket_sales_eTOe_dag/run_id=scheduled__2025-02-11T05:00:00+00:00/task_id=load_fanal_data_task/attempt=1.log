[2025-02-14T22:38:00.227+0600] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-02-14T22:38:00.368+0600] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: supermarket_sales_eTOe_dag.load_fanal_data_task scheduled__2025-02-11T05:00:00+00:00 [queued]>
[2025-02-14T22:38:00.412+0600] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: supermarket_sales_eTOe_dag.load_fanal_data_task scheduled__2025-02-11T05:00:00+00:00 [queued]>
[2025-02-14T22:38:00.412+0600] {taskinstance.py:2866} INFO - Starting attempt 1 of 1
[2025-02-14T22:38:00.498+0600] {taskinstance.py:2889} INFO - Executing <Task(SQLExecuteQueryOperator): load_fanal_data_task> on 2025-02-11 05:00:00+00:00
[2025-02-14T22:38:00.524+0600] {logging_mixin.py:190} WARNING - /home/shamim/airflow_git/Airflow_project/air_venv/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py:70 DeprecationWarning: This process (pid=605231) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2025-02-14T22:38:00.526+0600] {standard_task_runner.py:72} INFO - Started process 605347 to run task
[2025-02-14T22:38:00.541+0600] {standard_task_runner.py:104} INFO - Running: ['airflow', 'tasks', 'run', 'supermarket_sales_eTOe_dag', 'load_fanal_data_task', 'scheduled__2025-02-11T05:00:00+00:00', '--job-id', '190', '--raw', '--subdir', 'DAGS_FOLDER/final_assignment.py', '--cfg-path', '/tmp/tmpkxfacczn']
[2025-02-14T22:38:00.551+0600] {standard_task_runner.py:105} INFO - Job 190: Subtask load_fanal_data_task
[2025-02-14T22:38:01.016+0600] {task_command.py:467} INFO - Running <TaskInstance: supermarket_sales_eTOe_dag.load_fanal_data_task scheduled__2025-02-11T05:00:00+00:00 [running]> on host shamim-X541UV
[2025-02-14T22:38:01.820+0600] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='supermarket_sales_eTOe_dag' AIRFLOW_CTX_TASK_ID='load_fanal_data_task' AIRFLOW_CTX_EXECUTION_DATE='2025-02-11T05:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-02-11T05:00:00+00:00'
[2025-02-14T22:38:01.836+0600] {logging_mixin.py:190} INFO - Task instance is in running state
[2025-02-14T22:38:01.837+0600] {logging_mixin.py:190} INFO -  Previous state of the Task instance: queued
[2025-02-14T22:38:01.840+0600] {logging_mixin.py:190} INFO - Current task name:load_fanal_data_task state:running start_date:2025-02-14 16:38:00.369794+00:00
[2025-02-14T22:38:01.850+0600] {logging_mixin.py:190} INFO - Dag name:supermarket_sales_eTOe_dag and current dag run status:running
[2025-02-14T22:38:01.851+0600] {taskinstance.py:731} INFO - ::endgroup::
[2025-02-14T22:38:01.860+0600] {sql.py:295} INFO - Executing: 
    CREATE OR REPLACE PROCEDURE transform_and_load_data()
    LANGUAGE plpgsql
    AS $procedure$
    BEGIN
        insert into dim_branch(branch,city)
        select distinct branch, city from supermarket_sales ss ;
        
        insert into dim_customer(customer_type)
        select distinct customer_type from supermarket_sales;

        insert into dim_gender(gender)
        select distinct gender from supermarket_sales ss;

        insert into dim_product(product_line)
        select distinct product_line from supermarket_sales ss ;

        insert into dim_payment(payment)
        select distinct payment from supermarket_sales ss ;

        insert into dim_sales_date(date)
        select distinct date from supermarket_sales ss ;

        insert into fact_sales(invoice_id, branch_id, cutstomer_type_id, gender_id, product_id, unit_price, 
        quantity, cost_of_goods_sold , tax_5_percent, total, payment_id,  date_id, time, customer_satisfiction_rating)
        select distinct(ss.invoice_id), db.branch_id , dc.customer_type_id , dg.gender_id, dp.product_id , ss.unit_price , 
        ss.quantity , ss.cost_of_goods_sold , ss.tax_5_percent , ss.total , dpm.payment_id, dsd.date_id , 
        ss.time, ss.customer_stratification_rating 
        from supermarket_sales ss
        join dim_branch db on ss.branch=db.branch  
        join dim_customer dc on ss.customer_type=dc.customer_type
        join dim_gender dg on ss.gender=dg.gender
        join dim_product dp on ss.product_line=dp.product_line
        join dim_payment dpm on ss.payment=dpm.payment
        join dim_sales_date dsd on ss.date=dsd.date;
    END;
    $procedure$;
    CALL transform_and_load_data(); 
    
[2025-02-14T22:38:01.952+0600] {base.py:84} INFO - Retrieving connection 'postgres'
[2025-02-14T22:38:02.077+0600] {base.py:84} INFO - Retrieving connection 'postgres'
[2025-02-14T22:38:02.169+0600] {sql.py:511} INFO - Running statement: 
    CREATE OR REPLACE PROCEDURE transform_and_load_data()
    LANGUAGE plpgsql
    AS $procedure$
    BEGIN
        insert into dim_branch(branch,city)
        select distinct branch, city from supermarket_sales ss ;
        
        insert into dim_customer(customer_type)
        select distinct customer_type from supermarket_sales;

        insert into dim_gender(gender)
        select distinct gender from supermarket_sales ss;

        insert into dim_product(product_line)
        select distinct product_line from supermarket_sales ss ;

        insert into dim_payment(payment)
        select distinct payment from supermarket_sales ss ;

        insert into dim_sales_date(date)
        select distinct date from supermarket_sales ss ;

        insert into fact_sales(invoice_id, branch_id, cutstomer_type_id, gender_id, product_id, unit_price, 
        quantity, cost_of_goods_sold , tax_5_percent, total, payment_id,  date_id, time, customer_satisfiction_rating)
        select distinct(ss.invoice_id), db.branch_id , dc.customer_type_id , dg.gender_id, dp.product_id , ss.unit_price , 
        ss.quantity , ss.cost_of_goods_sold , ss.tax_5_percent , ss.total , dpm.payment_id, dsd.date_id , 
        ss.time, ss.customer_stratification_rating 
        from supermarket_sales ss
        join dim_branch db on ss.branch=db.branch  
        join dim_customer dc on ss.customer_type=dc.customer_type
        join dim_gender dg on ss.gender=dg.gender
        join dim_product dp on ss.product_line=dp.product_line
        join dim_payment dpm on ss.payment=dpm.payment
        join dim_sales_date dsd on ss.date=dsd.date;
    END;
    $procedure$;
    CALL transform_and_load_data(); 
    , parameters: None
[2025-02-14T22:38:02.462+0600] {logging_mixin.py:190} WARNING - /home/shamim/airflow_git/Airflow_project/air_venv/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:470 DeprecationWarning: Import of fetch_all_handler from the 'airflow.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from 'airflow.providers.common.sql.hooks.handlers'.
[2025-02-14T22:38:02.473+0600] {logging_mixin.py:190} WARNING - /home/shamim/airflow_git/Airflow_project/air_venv/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:471 DeprecationWarning: Import of return_single_query_results from the 'airflow.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from 'airflow.providers.common.sql.hooks.handlers'.
[2025-02-14T22:38:02.511+0600] {logging_mixin.py:190} WARNING - /home/shamim/airflow_git/Airflow_project/air_venv/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:486 DeprecationWarning: Import of return_single_query_results from the 'airflow.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from 'airflow.providers.common.sql.hooks.handlers'.
[2025-02-14T22:38:02.515+0600] {logging_mixin.py:190} WARNING - /home/shamim/airflow_git/Airflow_project/air_venv/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py:311 DeprecationWarning: Import of return_single_query_results from the 'airflow.providers.common.sql.hooks' module is deprecated and will
be removed in the future. Please import it from 'airflow.providers.common.sql.hooks.handlers'.
[2025-02-14T22:38:02.656+0600] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2025-02-14T22:38:02.657+0600] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=supermarket_sales_eTOe_dag, task_id=load_fanal_data_task, run_id=scheduled__2025-02-11T05:00:00+00:00, execution_date=20250211T050000, start_date=20250214T163800, end_date=20250214T163802
[2025-02-14T22:38:02.744+0600] {logging_mixin.py:190} INFO - Task instance in success state
[2025-02-14T22:38:02.744+0600] {logging_mixin.py:190} INFO -  Previous state of the Task instance: running
[2025-02-14T22:38:02.745+0600] {logging_mixin.py:190} INFO - Dag name:supermarket_sales_eTOe_dag queued_at:2025-02-14 16:36:56.443924+00:00
[2025-02-14T22:38:02.745+0600] {logging_mixin.py:190} INFO - Task hostname:shamim-X541UV operator:SQLExecuteQueryOperator
[2025-02-14T22:38:02.843+0600] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2025-02-14T22:38:02.985+0600] {taskinstance.py:3895} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-02-14T22:38:02.993+0600] {local_task_job_runner.py:245} INFO - ::endgroup::
